% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rolling_window.R
\name{calc_rolling_stats}
\alias{calc_rolling_stats}
\title{Calculate rolling window statistics}
\usage{
calc_rolling_stats(
  data,
  var_cols,
  id_cols = c("Lake", "Year"),
  time_col = "DOY",
  statistics = c("Mean", "SD", "SD_sd", "Ar1", "Ar1_sd"),
  vars_to_log = NULL,
  log_offset = 0.1,
  widths = c(21),
  detrend = FALSE,
  min_prop = 0.99
)
}
\arguments{
\item{data}{data frame containing time series to calculate rolling window stats on}

\item{var_cols}{character vector, variable names that are columns of *data* containing time series to calculate rolling window stats on}

\item{id_cols}{character vector, two columns specifying "groups" to separate data into before calculating stats independently on, defaults are "Lake" and "Year"#'}

\item{time_col}{character, column name that defines time step of data within the *id_cols* groupings}

\item{statistics}{character vector, rolling window statistics to calculate, defaults to all available: c("Mean", "SD", "SD_sd", "Ar1", "Ar1_sd")}

\item{vars_to_log}{character vector, optional variables names to log10 transform and create new columns before calculating rolling window stats}

\item{log_offset}{positive numeric value, if any variables are being log transformed that contain negative values, all values will be shifted so that the minimum (before transformation) equals this value}

\item{widths}{numeric vector, rolling window width(s) to be used, default is c(21)}

\item{detrend}{TRUE or FALSE, should data within rolling windows be linearly detrended before calculating *statistics*}

\item{min_prop}{numeric value between 0 and 1, proportion of data within a rolling window to calculate rolling window statistic, default 0.99}
}
\value{
a data frame with the results for the specified stats, widths, variables, etc.
}
\description{
Calculate rolling window statistics for multiple combinations of statistics, variables, rolling window widths, and detrending options.
}
\examples{
rw_stats = calc_rolling_stats(data = ts_data, var_cols = c("DO_Sat"))
}
